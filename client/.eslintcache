[{"/Users/naomitran/trip-app/client/src/index.js":"1","/Users/naomitran/trip-app/client/src/reportWebVitals.js":"2","/Users/naomitran/trip-app/client/src/App.js":"3","/Users/naomitran/trip-app/client/src/components/login/Sign.js":"4","/Users/naomitran/trip-app/client/src/components/login/actions/authActions.js":"5","/Users/naomitran/trip-app/client/src/components/login/store.js":"6","/Users/naomitran/trip-app/client/src/components/private-route/PrivateRoute.js":"7","/Users/naomitran/trip-app/client/src/components/login/auth/Login.js":"8","/Users/naomitran/trip-app/client/src/components/main/Dashboard.js":"9","/Users/naomitran/trip-app/client/src/components/login/utils/setAuthToken.js":"10","/Users/naomitran/trip-app/client/src/components/login/auth/Register.js":"11","/Users/naomitran/trip-app/client/src/components/login/actions/types.js":"12","/Users/naomitran/trip-app/client/src/components/login/reducers/index.js":"13","/Users/naomitran/trip-app/client/src/components/login/reducers/errorReducers.js":"14","/Users/naomitran/trip-app/client/src/components/login/reducers/authReducers.js":"15","/Users/naomitran/trip-app/client/src/transportation/TransportPage.jsx":"16","/Users/naomitran/trip-app/client/src/transportation/when.jsx":"17","/Users/naomitran/trip-app/client/src/transportation/title.jsx":"18","/Users/naomitran/trip-app/client/src/transportation/mode.jsx":"19","/Users/naomitran/trip-app/client/src/components/SearchPage.jsx":"20","/Users/naomitran/trip-app/client/src/components/SearchBar.jsx":"21","/Users/naomitran/trip-app/client/src/components/NavBar.jsx":"22","/Users/naomitran/trip-app/client/src/components/CountryList.jsx":"23","/Users/naomitran/trip-app/client/src/transportation/components/sidebar.jsx":"24","/Users/naomitran/trip-app/client/src/transportation/TPage.jsx":"25","/Users/naomitran/trip-app/client/src/transportation/components/header.jsx":"26","/Users/naomitran/trip-app/client/src/transportation/components/content.jsx":"27","/Users/naomitran/trip-app/client/src/accomod/APage.jsx":"28","/Users/naomitran/trip-app/client/src/accomod/components/header.jsx":"29","/Users/naomitran/trip-app/client/src/accomod/components/content.jsx":"30","/Users/naomitran/trip-app/client/src/accomod/components/filter.jsx":"31"},{"size":976,"mtime":1610300827186,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1610234374733,"results":"34","hashOfConfig":"33"},{"size":1795,"mtime":1610252892043,"results":"35","hashOfConfig":"33"},{"size":378,"mtime":1610252892046,"results":"36","hashOfConfig":"33"},{"size":1751,"mtime":1610252892051,"results":"37","hashOfConfig":"33"},{"size":332,"mtime":1610252892053,"results":"38","hashOfConfig":"33"},{"size":611,"mtime":1610252892056,"results":"39","hashOfConfig":"33"},{"size":3769,"mtime":1610252892052,"results":"40","hashOfConfig":"33"},{"size":1222,"mtime":1610252892055,"results":"41","hashOfConfig":"33"},{"size":342,"mtime":1610252892054,"results":"42","hashOfConfig":"33"},{"size":4635,"mtime":1610252892052,"results":"43","hashOfConfig":"33"},{"size":137,"mtime":1610252892051,"results":"44","hashOfConfig":"33"},{"size":213,"mtime":1610252892053,"results":"45","hashOfConfig":"33"},{"size":294,"mtime":1610252892052,"results":"46","hashOfConfig":"33"},{"size":662,"mtime":1610252892052,"results":"47","hashOfConfig":"33"},{"size":2029,"mtime":1610260659029,"results":"48","hashOfConfig":"33"},{"size":647,"mtime":1610259261711,"results":"49","hashOfConfig":"33"},{"size":733,"mtime":1610257591334,"results":"50","hashOfConfig":"33"},{"size":786,"mtime":1610256259249,"results":"51","hashOfConfig":"33"},{"size":1809,"mtime":1610252892046,"results":"52","hashOfConfig":"33"},{"size":459,"mtime":1610252892045,"results":"53","hashOfConfig":"33"},{"size":909,"mtime":1610252892044,"results":"54","hashOfConfig":"33"},{"size":339,"mtime":1610252892044,"results":"55","hashOfConfig":"33"},{"size":1632,"mtime":1610266438835,"results":"56","hashOfConfig":"33"},{"size":3726,"mtime":1610300290933,"results":"57","hashOfConfig":"33"},{"size":502,"mtime":1610265660609,"results":"58","hashOfConfig":"33"},{"size":3345,"mtime":1610300217204,"results":"59","hashOfConfig":"33"},{"size":2761,"mtime":1610298713395,"results":"60","hashOfConfig":"33"},{"size":502,"mtime":1610298620441,"results":"61","hashOfConfig":"33"},{"size":3080,"mtime":1610299175992,"results":"62","hashOfConfig":"33"},{"size":1350,"mtime":1610300801835,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rv9whw",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"68"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"/Users/naomitran/trip-app/client/src/index.js",["138","139","140","141","142","143"],"/Users/naomitran/trip-app/client/src/reportWebVitals.js",[],["144","145"],"/Users/naomitran/trip-app/client/src/App.js",[],"/Users/naomitran/trip-app/client/src/components/login/Sign.js",[],"/Users/naomitran/trip-app/client/src/components/login/actions/authActions.js",[],"/Users/naomitran/trip-app/client/src/components/login/store.js",[],"/Users/naomitran/trip-app/client/src/components/private-route/PrivateRoute.js",[],"/Users/naomitran/trip-app/client/src/components/login/auth/Login.js",[],"/Users/naomitran/trip-app/client/src/components/main/Dashboard.js",[],"/Users/naomitran/trip-app/client/src/components/login/utils/setAuthToken.js",[],"/Users/naomitran/trip-app/client/src/components/login/auth/Register.js",[],"/Users/naomitran/trip-app/client/src/components/login/actions/types.js",[],"/Users/naomitran/trip-app/client/src/components/login/reducers/index.js",[],"/Users/naomitran/trip-app/client/src/components/login/reducers/errorReducers.js",[],"/Users/naomitran/trip-app/client/src/components/login/reducers/authReducers.js",[],"/Users/naomitran/trip-app/client/src/transportation/TransportPage.jsx",["146","147","148","149","150","151","152"],"\nimport React, { useState, useEffect } from 'react';\nimport Mode from './mode';\nimport Title from './title';\nimport { Grommet, Header, Main, Text } from 'grommet';\nimport SidePanel from './components/sidebar';\n\nimport When from './when';\n\nconst TransportPage = (props) => {\n  const [input, setInput] = useState('');\n//   const [countryListDefault, setCountryListDefault] = useState();\n//   const [countryList, setCountryList] = useState();\n\n  const fetchData = async () => {\n    return await fetch('https://restcountries.eu/rest/v2/all')\n      .then(response => response.json())\n      .then(data => {\n        //  setCountryList(data) \n        //  setCountryListDefault(data)\n       });}\n\n\n  const updateInput = async (input) => {\n    //  const filtered = countryListDefault.filter(country => {\n    //   return country.name.toLowerCase().includes(input.toLowerCase())\n    //  })\n     setInput(input);\n    //  setCountryList(filtered);\n  }\n\n  useEffect( () => {fetchData()},[]);\n\n\n\n\n\t\n  return (\n    <>\n    <Main>\n      <Grommet className=\"App\">\n\n        <SidePanel />\n\n    \n    {/* <Grommet className=\"App\"> \n    \n    <Header >\n    <a href=\"link\"><navwords>home</navwords></a>\n          <a href=\"link\"><navwords>explore</navwords></a>\n          <a href=\"link\"><navwords>my trips</navwords></a>\n          <button className=\"Login-Btn\">sign in</button> \n    </Header>\n        <header className=\"App-header\">\n        <div className=\"flexbox-container\">\n\n          <div className=\"TopLeft\">\n            <Title\n            input={input}\n            onChange={updateInput}\n            />\n            </div>\n\n\n      <div className=\"flexbox-container\">\n          <Mode \n       input={input} \n       onChange={updateInput}\n      />\n          </div>\n          <When \n       input={input} \n       onChange={updateInput}\n      />\n\n\n      {/* <CountryList countryList={countryList}/> */}\n      {/* </div> */}\n\n\n      {/* </div>\n      </header>\n      </Grommet>  */}\n\n      </Grommet>\n      </Main>\n    </>\n   );\n}\n\nexport default TransportPage","/Users/naomitran/trip-app/client/src/transportation/when.jsx",["153"],"import React, { Component } from 'react';\nimport { Box, DateInput, Grommet } from 'grommet';\nimport { grommet } from 'grommet/themes';\n\nconst When = ({keyword,setKeyword}) => {\n    const [value, setValue] = React.useState();\n  const onChange = event => {\n    const nextValue = event.value;\n    console.log('onChange', nextValue);\n    setValue(nextValue);\n  };\n  return (\n    <Grommet full theme={grommet}>\n    <Box fill align=\"center\" justify=\"start\" pad=\"large\">\n      <Box width=\"medium\" gap=\"medium\">\n        <DateInput format=\"dd/mm/yyyy\" value={value} onChange={onChange} />\n      </Box>\n    </Box>\n  </Grommet>\n  );\n}\n \nexport default When;\n","/Users/naomitran/trip-app/client/src/transportation/title.jsx",["154"],"import React, { Component } from 'react'\n\n// class Title extends Component {\n//     state = {  }\n\n//     render() { \n//         return ( \n//             <div className=\"TopLeft\">\n//             <input className=\"LargeTitle\" placeholder=\"Enter Trip Name\" type=\"text\" />\n//             </div>\n//          );\n//     }\n// }\n \n// export default Title;\n\nconst Title = ({keyword,setKeyword}) => {\n    const BarStyling = {width:\"10rem\",background:\"#F2F1F9\", opacity: 0.80, border:\"none\", padding:\"1.0rem\"};\n    return (\n      <input \n       style={BarStyling}\n       key=\"random1\"\n       value={keyword}\n       placeholder={\"Name This Trip\"}\n       onChange={(e) => setKeyword(e.target.value)}\n      />\n    );\n  }\n   \n  export default Title;","/Users/naomitran/trip-app/client/src/transportation/mode.jsx",["155"],"import React, { Component } from 'react';\n\nconst Mode = ({keyword,setKeyword}) => {\n  const BarStyling = {width:\"10rem\",\n  background:\"#F2F1F9\", \n  opacity: 0.80, \n  border:\"none\", \n  padding:\"1.0rem\"};\n  return (\n    <div>\n    <div>\n    <input \n         style={BarStyling}\n         key=\"random1\"\n         value={keyword}\n         placeholder={\"Mode of transportation\"}\n         onChange={(e) => setKeyword(e.target.value)}\n        />\n          </div>\n          <p>\n            \n          </p>\n      <div>\n      <input \n           style={BarStyling}\n           key=\"random1\"\n           value={keyword}\n           placeholder={\"Number of guests\"}\n           onChange={(e) => setKeyword(e.target.value)}\n          />\n            </div>  \n            </div> \n  );\n}\n \nexport default Mode;\n","/Users/naomitran/trip-app/client/src/components/SearchPage.jsx",["156","157","158","159"],"\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport CountryList from './CountryList';\nimport NavBar from './NavBar';\nimport tree from './tree.png';\n\nconst SearchPage = (props) => {\n  const [input, setInput] = useState('');\n  const [countryListDefault, setCountryListDefault] = useState();\n  const [countryList, setCountryList] = useState();\n\n  const fetchData = async () => {\n    return await fetch('https://restcountries.eu/rest/v2/all')\n      .then(response => response.json())\n      .then(data => {\n         setCountryList(data) \n         setCountryListDefault(data)\n       });}\n\n  const updateInput = async (input) => {\n     const filtered = countryListDefault.filter(country => {\n      return country.name.toLowerCase().includes(input.toLowerCase())\n     })\n     setInput(input);\n     setCountryList(filtered);\n  }\n\n  useEffect( () => {fetchData()},[]);\n\t\n  return (\n    <>\n    <div className=\"App\">\n        <header className=\"App-header\">\n\n          {/* <div className=\"Nav-header\">  */}\n\n          {/* <img src={tree} className=\"App-logo\" alt=\"tree\" />*/}\n          <div className=\"flexbox-container\">\n          <div className=\"spacer\"><a href=\"link\"><navwords>home</navwords></a></div>\n          <div className=\"spacer\"><a href=\"link\"><navwords>explore</navwords></a></div>\n          <div className=\"spacer\"><a href=\"link\"><navwords>my trips</navwords></a></div>\n          <div className=\"spacer\"><button className=\"Login-Btn\">sign in</button> </div>\n\n          </div>\n\n\n\n        <h3>Vacationing</h3>\n\n      <h1>Made easier.</h1>\n      <SearchBar \n       input={input} \n       onChange={updateInput}\n      />\n      {/* <CountryList countryList={countryList}/> */}\n      {/* </div> */}\n      </header>\n      </div>\n    </>\n   );\n}\n\nexport default SearchPage","/Users/naomitran/trip-app/client/src/components/SearchBar.jsx",["160"],"import React, { Component } from 'react';\n// import React from 'react';\n\nconst SearchBar = ({keyword,setKeyword}) => {\n    const BarStyling = {width:\"35rem\",background:\"#F2F1F9\", opacity: 0.80, border:\"none\", padding:\"1.0rem\"};\n    return (\n      <input \n       style={BarStyling}\n       key=\"random1\"\n       value={keyword}\n       placeholder={\"Where to?\"}\n       onChange={(e) => setKeyword(e.target.value)}\n      />\n    );\n  }\n  \n  export default SearchBar","/Users/naomitran/trip-app/client/src/components/NavBar.jsx",[],"/Users/naomitran/trip-app/client/src/components/CountryList.jsx",[],"/Users/naomitran/trip-app/client/src/transportation/components/sidebar.jsx",["161"],"import React, { Component } from 'react';\n\nimport { Avatar, Button, Box, grommet, Grommet, Nav, Sidebar, Text } from 'grommet';\n\nimport {\n  Analytics,\n  Chat,\n  Clock,\n  Configure,\n  Help,\n  Projects,\n  StatusInfoSmall,\n} from 'grommet-icons';\n\nconst SidebarHeader = () => (\n  <Avatar\n    border={{ size: 'small', color: 'accent-2' }}\n    background=\"white\"\n    flex={false}\n  >\n  </Avatar>\n);\n\nconst SidebarFooter = () => (\n  <Nav gap=\"small\">\n    <Button icon={<Chat />} />\n    <Button icon={<Help />} />\n  </Nav>\n);\n\nconst MainNavigation = () => (\n  <Nav gap=\"small\">\n    <Button icon={<StatusInfoSmall />} />\n    <Button icon={<Projects />} />\n    <Button icon={<Clock />} />\n    <Box pad=\"small\" border={{ color: 'white', side: 'bottom' }} />\n    <Box gap=\"small\" pad={{ vertical: 'medium' }}>\n      <Button icon={<Analytics />} />\n      <Button icon={<Configure />} />\n    </Box>\n  </Nav>\n);\n\nclass SideBar extends Component {\n    state = {  }\n    render() { \n        return ( \n          <Grommet>\n\n  <Grommet theme={grommet} full>\n    <Box direction=\"row\" height={{ min: '100%' }}>\n      <Sidebar\n        background=\"accent-1\"\n        header={<SidebarHeader />}\n        footer={<SidebarFooter />}\n      >\n        <MainNavigation />\n      </Sidebar>\n    </Box>\n  </Grommet>\n\n  {/* <Grommet theme={grommet} full>\n    <Box direction=\"row\" height={{ min: '100%' }}>\n      <Sidebar\n        background=\"accent-1\"\n        header={<SidebarHeader />}\n        footer={<SidebarFooter />}\n      >\n        <MainNavigation />\n      </Sidebar>\n    </Box>\n  </Grommet> */}\n\n          </Grommet>\n         );\n    }\n}\n \nexport default SideBar;\n","/Users/naomitran/trip-app/client/src/transportation/TPage.jsx",["162","163","164","165"],"import React, { Component, useState, useEffect } from 'react';\nimport { Grommet, Header, Main, Text, Box, Button, Grid, grommet, Avatar, Image, DateInput, FormField } from 'grommet';\nimport SidePanel from './components/sidebar';\nimport NavBar from './components/header';\nimport Content from './components/content';\n\n\n\nconst AppGrid = () => {\n    const [sidebar, setSidebar] = useState(true);\n\n    const When = ({keyword,setKeyword}) => {\n      const [value, setValue] = React.useState();\n    const onChange = event => {\n      const nextValue = event.value;\n      console.log('onChange', nextValue);\n      setValue(nextValue);\n    };\n    \n    return (\n      <Grommet full theme={grommet}>\n      <Box fill=\"horizontal\" justify=\"start\" align=\"center\" background=\"light-2\">\n        <Box width=\"medium\" direction=\"row-responsive\"background=\"light-2\">\n              <FormField label=\"Departure Date\" htmlFor=\"text-area\">\n              <DateInput format=\"dd/mm/yyyy\" value={value} onChange={onChange} />\n              </FormField>\n  \n              <Box pad=\"medium\" background=\"light-2\"/>\n  \n              <FormField label=\"Return Date\" htmlFor=\"text-area\">\n              <DateInput format=\"dd/mm/yyyy\" value={value} onChange={onChange} />\n              </FormField>\n        </Box>\n      </Box>\n    </Grommet>\n    );\n  }\n  \n    return (\n      <Grommet full theme={grommet}>\n        <Grid\n          fill\n          rows={['auto', 'flex']}\n          columns={['auto', 'flex']}\n          areas={[\n            { name: 'header', start: [0, 0], end: [1, 0] },\n            { name: 'sidebar', start: [0, 1], end: [0, 1] },\n            { name: 'when', start: [1, 1], end: [1, 1] },\n          ]}\n        >\n          <Box\n            gridArea=\"header\"\n            direction=\"row\"\n            align=\"center\"\n            justify=\"between\"\n            pad={{ horizontal: 'medium', vertical: 'small' }}\n            background=\"light-3\"\n          >\n                <Image\n                fallback=\"./components/logo.png\"\n                src=\"//v2.grommet.io/assets/logo_not_exists.png\"\n                />\n\n            <Button onClick={() => setSidebar(!sidebar)}>\n              <Text size=\"large\">TripSuite</Text>\n            </Button>\n            <NavBar />\n            <Grommet>\n            <Avatar\n    border={{ size: 'small', color: 'accent-2' }}\n    background=\"white\"\n    flex={false}\n  >\n    SY\n  </Avatar>\n  <Text>Jane Doe</Text> \n            </Grommet>\n            \n          </Box>\n          {sidebar && (\n            <Box\n              gridArea=\"sidebar\"\n              background=\"dark-3\"\n              width=\"small\"\n              animation={[\n                { type: 'fadeIn', duration: 500 },\n                { type: 'slideRight', size: 'xlarge', duration: 150 },\n              ]}\n            >\n\n                \n                \n              {[  <Avatar\n    border={{ size: 'small', color: 'accent-2' }}\n    background=\"white\"\n    flex={false}\n  >\n    SY\n  </Avatar>,\n  'Transportation', 'Accomodation', 'Lifestyle', 'Costs', 'Plan Trip!'].map(name => (\n                <Button key={name} href=\"#\" hoverIndicator>\n                  <Box pad={{ horizontal: 'medium', vertical: 'small' }}>\n                    <Text>{name}</Text>\n                  </Box>\n                </Button>\n              ))}\n            </Box>\n          )}\n          <Box gridArea=\"when\" justify=\"left\" align=\"center\" size=\"contain\" background=\"light-2\">\n            <Content />\n            <When />\n          </Box>\n        </Grid>\n      </Grommet>\n    );\n  };\n\nclass TPage extends Component {\n    state = {  }\n    render() { \n        return ( \n            <Grommet>\n                <AppGrid />\n\n            </Grommet>\n         );\n    }\n}\n \nexport default TPage;","/Users/naomitran/trip-app/client/src/transportation/components/header.jsx",[],"/Users/naomitran/trip-app/client/src/transportation/components/content.jsx",["166","167","168","169","170","171","172","173","174"],"import React, { Component, useState } from 'react'\n\nimport { Box, Select, FormField, Grommet, TextArea, DateInput, Grid, Button, Text } from 'grommet';\nimport { grommet, ThemeType, ThemeContext } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\n\nconst customTheme = {\n    global: {\n      font: {\n        size: '13px',\n      },\n      input: {\n        weight: 400,\n      },\n    },\n    formField: {\n      label: {\n        color: 'dark-3',\n        size: 'xsmall',\n        margin: { vertical: '0', bottom: 'small', horizontal: '0' },\n        weight: 600,\n      },\n      border: false,\n      margin: '0',\n    },\n  };\n\n\n\n\n\n\nconst options = ['Plane, Vehicle, Shuttle'];\n\nconst Mode = () => {\n  const [value, setValue] = useState();\n  return (\n    <Box fill align=\"center\" justify=\"start\" basis=\"xlarge\" pad=\"xsmall\">\n      <Select\n        placeholder=\"Mode of Transportation\"\n        multiple\n        value={value}\n        options={options}\n        onChange={({ value: nextValue }) => setValue(nextValue)}\n        clear\n      />\n    </Box>\n  );\n};\nconst optionsG = ['0, 1, 2, 3, 4, 5, 6, 7+']\nconst Guests = () => {\n  const [value, setValue] = useState();\n  return (\n    <Box fill align=\"center\" justify=\"start\" basis=\"xlarge\" pad=\"xsmall\">\n      <Select\n        placeholder=\"Number of Guests\"\n        multiple\n        value={value}\n        options={optionsG}\n        onChange={({ value: nextValue }) => setValue(nextValue)}\n        // clear={{ position: 'bottom' }}\n      />\n    </Box>\n  );\n};\n\n\n\n\n\nclass Content extends Component {\n\n\n    state = {  }\n    render() { \n        return ( \n            <Grommet >\n              <Box basis=\"xlarge\">\n\n              \n              <h1>Name This Trip</h1>\n                    <h3>First, let's give this trip a name:</h3>\n                <FormField horizontal=\"small\" >\n                        <TextArea id=\"text-area\" size=\"large\" placeholder=\"Trip with the girls!\"/>\n                    </FormField>\n                    <h1>Transportation</h1>\n                    <h3>Now let's get the basics down!</h3>\n                    <Box width=\"medium\" direction=\"row-responsive\"  >\n                    <Mode />\n                    <Guests />\n                    </Box>\n\n\n                    \n                    {/* <FormField label=\"Mode of Transportation\" htmlFor=\"text-area\">\n                        <TextArea id=\"text-area\" placeholder=\"plane or vehicle\" />\n                    </FormField>\n                    <Box pad=\"medium\">\n\n                    </Box>\n                    <FormField label=\"Number of Guests\" htmlFor=\"text-area\">\n                        <TextArea id=\"text-area\" placeholder=\"#\" />\n                    </FormField> */}\n                    \n\n                    \n              <Box width=\"medium\" direction=\"row-responsive\">\n              <FormField label=\"From\" htmlFor=\"text-area\">\n                        <TextArea id=\"text-area\" placeholder=\"Current Location\" />\n                    </FormField>\n                    <Box pad=\"medium\"/>\n                    <FormField label=\"To\" htmlFor=\"text-area\">\n                        <TextArea id=\"text-area\" placeholder=\"Dream Destination\" />\n                    </FormField>\n\n                </Box>      \n                \n\n\n\n\n                </Box>\n            </Grommet>\n            \n         );\n    }\n}\n\n \nexport default Content;","/Users/naomitran/trip-app/client/src/accomod/APage.jsx",["175","176","177"],"import React, { Component, useState, useEffect } from 'react';\nimport { Grommet, Header, Main, Text, Box, Button, Grid, grommet, Avatar, Image } from 'grommet';\n// import SidePanel from './components/sidebar';\nimport Content from './components/content';\nimport NavBar from './components/header';\n\n\nconst AppGrid = () => {\n    const [sidebar, setSidebar] = useState(true);\n  \n    return (\n      <Grommet full theme={grommet}>\n        <Grid\n          fill\n          rows={['auto', 'flex']}\n          columns={['auto', 'flex']}\n          areas={[\n            { name: 'header', start: [0, 0], end: [1, 0] },\n            { name: 'sidebar', start: [0, 1], end: [0, 1] },\n            { name: 'main', start: [1, 1], end: [1, 1] },\n          ]}\n        >\n          <Box\n            gridArea=\"header\"\n            direction=\"row\"\n            align=\"center\"\n            justify=\"between\"\n            pad={{ horizontal: 'medium', vertical: 'small' }}\n            background=\"light-3\"\n          >\n                <Image\n                fallback=\"./components/logo.png\"\n                src=\"//v2.grommet.io/assets/logo_not_exists.png\"\n                />\n\n            <Button onClick={() => setSidebar(!sidebar)}>\n              <Text size=\"large\">TripSuite</Text>\n            </Button>\n            <NavBar />\n            <Grommet>\n            <Avatar\n    border={{ size: 'small', color: 'accent-2' }}\n    background=\"white\"\n    flex={false}\n  >\n    SY\n  </Avatar>\n  <Text>Jane Doe</Text> \n            </Grommet>\n            \n          </Box>\n          {sidebar && (\n            <Box\n              gridArea=\"sidebar\"\n              background=\"dark-3\"\n              width=\"small\"\n              animation={[\n                { type: 'fadeIn', duration: 500 },\n                { type: 'slideRight', size: 'xlarge', duration: 150 },\n              ]}\n            >\n\n                \n                \n              {[  <Avatar\n    border={{ size: 'small', color: 'accent-2' }}\n    background=\"white\"\n    flex={false}\n  >\n    SY\n  </Avatar>,\n  'Transportation', 'Accomodation', 'Lifestyle', 'Costs', 'Plan Trip!'].map(name => (\n                <Button key={name} href=\"#\" hoverIndicator>\n                  <Box pad={{ horizontal: 'medium', vertical: 'small' }}>\n                    <Text>{name}</Text>\n                  </Box>\n                </Button>\n              ))}\n            </Box>\n          )}\n          <Box gridArea=\"main\" justify=\"left\" align=\"left\" background=\"light-2\" size=\"contain\">\n            <Content />\n          </Box>\n        </Grid>\n      </Grommet>\n    );\n  };\n\nclass TPage extends Component {\n    state = {  }\n    render() { \n        return ( \n            <Grommet>\n                <AppGrid />\n\n            </Grommet>\n         );\n    }\n}\n \nexport default TPage;","/Users/naomitran/trip-app/client/src/accomod/components/header.jsx",[],"/Users/naomitran/trip-app/client/src/accomod/components/content.jsx",["178","179","180","181","182","183","184","185","186"],"import React, { Component, useState } from 'react'\n\nimport { Box, Select, FormField, Grommet, TextArea, DateInput, Grid, Button, Text } from 'grommet';\nimport { grommet, ThemeType, ThemeContext } from 'grommet/themes';\nimport { deepMerge } from 'grommet/utils';\n\nconst customTheme = {\n    global: {\n      font: {\n        size: '13px',\n      },\n      input: {\n        weight: 400,\n      },\n    },\n    formField: {\n      label: {\n        color: 'dark-3',\n        size: 'xsmall',\n        margin: { vertical: '0', bottom: 'small', horizontal: '0' },\n        weight: 600,\n      },\n      border: false,\n      margin: '0',\n    },\n  };\n\n  const When = ({keyword,setKeyword}) => {\n    const [value, setValue] = React.useState();\n  const onChange = event => {\n    const nextValue = event.value;\n    console.log('onChange', nextValue);\n    setValue(nextValue);\n  };\n  \n  return (\n    <Grommet full theme={grommet}>\n    <Box fill=\"horizontal\" justify=\"start\" align=\"center\">\n      <Box width=\"medium\" direction=\"row-responsive\">\n            <FormField label=\"Departure Date\" htmlFor=\"text-area\">\n            <DateInput format=\"dd/mm/yyyy\" value={value} onChange={onChange} />\n            </FormField>\n\n            <Box pad=\"medium\" />\n\n            <FormField label=\"Return Date\" htmlFor=\"text-area\">\n            <DateInput format=\"dd/mm/yyyy\" value={value} onChange={onChange} />\n            </FormField>\n      </Box>\n    </Box>\n  </Grommet>\n  );\n}\n\n\n\n\nconst options = ['Hotel Choices......'];\n\nconst Hotel = () => {\n  const [value, setValue] = useState();\n  return (\n    <Box fill align=\"center\" justify=\"start\" basis=\"xlarge\" pad=\"xsmall\">\n      <Select\n        placeholder=\"Hotels\"\n        multiple\n        value={value}\n        options={options}\n        onChange={({ value: nextValue }) => setValue(nextValue)}\n        clear\n      />\n    </Box>\n  );\n};\n\n\nconst ClearForm = () => {\n  const [value, setValue] = useState();\n  return (\n    <Box fill align=\"center\" justify=\"start\" pad=\"large\">\n      <FormField label=\"Numbers\" name=\"numbers\">\n        <Select\n          name=\"numbers\"\n          placeholder=\"Clear within formfield\"\n          multiple\n          options={options}\n          value={value}\n          clear\n          onChange={({ value: nextValue }) => setValue(nextValue)}\n        />\n      </FormField>\n    </Box>\n  );\n};\n\n\n\n\n\nclass Content extends Component {\n\n\n    state = {  }\n    render() { \n        return ( \n            <Grommet >\n              <Box align=\"center\" basis=\"xlarge\">\n\n              \n              <h1>***Trip Name***</h1>\n                <FormField horizontal=\"small\" >\n                        <TextArea id=\"text-area\" size=\"large\" placeholder=\"Trip Name\"/>\n                    </FormField>\n                    <h1>Accomodation</h1>\n                    <h3>Where will you stay? Skip this step if you already have a place!</h3>\n                    <Box width=\"medium\" direction=\"row-responsive\" >\n                    <Hotel />\n                    </Box>\n\n\n                </Box>\n            </Grommet>\n            \n         );\n    }\n}\n\n \nexport default Content;","/Users/naomitran/trip-app/client/src/accomod/components/filter.jsx",[],{"ruleId":"187","severity":1,"message":"188","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":11},{"ruleId":"187","severity":1,"message":"191","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":18},{"ruleId":"187","severity":1,"message":"192","line":9,"column":8,"nodeType":"189","messageId":"190","endLine":9,"endColumn":13},{"ruleId":"187","severity":1,"message":"193","line":10,"column":8,"nodeType":"189","messageId":"190","endLine":10,"endColumn":13},{"ruleId":"187","severity":1,"message":"194","line":11,"column":8,"nodeType":"189","messageId":"190","endLine":11,"endColumn":11},{"ruleId":"187","severity":1,"message":"195","line":13,"column":8,"nodeType":"189","messageId":"190","endLine":13,"endColumn":13},{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"187","severity":1,"message":"200","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":12},{"ruleId":"187","severity":1,"message":"201","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":13},{"ruleId":"187","severity":1,"message":"202","line":5,"column":19,"nodeType":"189","messageId":"190","endLine":5,"endColumn":25},{"ruleId":"187","severity":1,"message":"203","line":5,"column":33,"nodeType":"189","messageId":"190","endLine":5,"endColumn":37},{"ruleId":"187","severity":1,"message":"204","line":8,"column":8,"nodeType":"189","messageId":"190","endLine":8,"endColumn":12},{"ruleId":"187","severity":1,"message":"205","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":15},{"ruleId":"187","severity":1,"message":"206","line":24,"column":9,"nodeType":"189","messageId":"190","endLine":24,"endColumn":20},{"ruleId":"187","severity":1,"message":"207","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"207","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"207","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"208","line":4,"column":8,"nodeType":"189","messageId":"190","endLine":4,"endColumn":19},{"ruleId":"187","severity":1,"message":"209","line":5,"column":8,"nodeType":"189","messageId":"190","endLine":5,"endColumn":14},{"ruleId":"187","severity":1,"message":"210","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":12},{"ruleId":"187","severity":1,"message":"211","line":11,"column":10,"nodeType":"189","messageId":"190","endLine":11,"endColumn":21},{"ruleId":"187","severity":1,"message":"207","line":1,"column":17,"nodeType":"189","messageId":"190","endLine":1,"endColumn":26},{"ruleId":"187","severity":1,"message":"203","line":3,"column":63,"nodeType":"189","messageId":"190","endLine":3,"endColumn":67},{"ruleId":"187","severity":1,"message":"212","line":1,"column":38,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"187","severity":1,"message":"202","line":2,"column":19,"nodeType":"189","messageId":"190","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"213","line":2,"column":27,"nodeType":"189","messageId":"190","endLine":2,"endColumn":31},{"ruleId":"187","severity":1,"message":"214","line":3,"column":8,"nodeType":"189","messageId":"190","endLine":3,"endColumn":17},{"ruleId":"187","severity":1,"message":"215","line":3,"column":53,"nodeType":"189","messageId":"190","endLine":3,"endColumn":62},{"ruleId":"187","severity":1,"message":"216","line":3,"column":64,"nodeType":"189","messageId":"190","endLine":3,"endColumn":68},{"ruleId":"187","severity":1,"message":"217","line":3,"column":70,"nodeType":"189","messageId":"190","endLine":3,"endColumn":76},{"ruleId":"187","severity":1,"message":"203","line":3,"column":78,"nodeType":"189","messageId":"190","endLine":3,"endColumn":82},{"ruleId":"187","severity":1,"message":"218","line":4,"column":10,"nodeType":"189","messageId":"190","endLine":4,"endColumn":17},{"ruleId":"187","severity":1,"message":"219","line":4,"column":19,"nodeType":"189","messageId":"190","endLine":4,"endColumn":28},{"ruleId":"187","severity":1,"message":"220","line":4,"column":30,"nodeType":"189","messageId":"190","endLine":4,"endColumn":42},{"ruleId":"187","severity":1,"message":"221","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"222","line":7,"column":7,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"212","line":1,"column":38,"nodeType":"189","messageId":"190","endLine":1,"endColumn":47},{"ruleId":"187","severity":1,"message":"202","line":2,"column":19,"nodeType":"189","messageId":"190","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"213","line":2,"column":27,"nodeType":"189","messageId":"190","endLine":2,"endColumn":31},{"ruleId":"187","severity":1,"message":"216","line":3,"column":64,"nodeType":"189","messageId":"190","endLine":3,"endColumn":68},{"ruleId":"187","severity":1,"message":"217","line":3,"column":70,"nodeType":"189","messageId":"190","endLine":3,"endColumn":76},{"ruleId":"187","severity":1,"message":"203","line":3,"column":78,"nodeType":"189","messageId":"190","endLine":3,"endColumn":82},{"ruleId":"187","severity":1,"message":"219","line":4,"column":19,"nodeType":"189","messageId":"190","endLine":4,"endColumn":28},{"ruleId":"187","severity":1,"message":"220","line":4,"column":30,"nodeType":"189","messageId":"190","endLine":4,"endColumn":42},{"ruleId":"187","severity":1,"message":"221","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":19},{"ruleId":"187","severity":1,"message":"222","line":7,"column":7,"nodeType":"189","messageId":"190","endLine":7,"endColumn":18},{"ruleId":"187","severity":1,"message":"223","line":28,"column":9,"nodeType":"189","messageId":"190","endLine":28,"endColumn":13},{"ruleId":"187","severity":1,"message":"224","line":77,"column":7,"nodeType":"189","messageId":"190","endLine":77,"endColumn":16},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","'SearchPage' is defined but never used.","'TPage' is defined but never used.","'Login' is defined but never used.","'Reg' is defined but never used.","'APage' is defined but never used.","no-native-reassign",["225"],"no-negated-in-lhs",["226"],"'Mode' is defined but never used.","'Title' is defined but never used.","'Header' is defined but never used.","'Text' is defined but never used.","'When' is defined but never used.","'input' is assigned a value but never used.","'updateInput' is assigned a value but never used.","'Component' is defined but never used.","'CountryList' is defined but never used.","'NavBar' is defined but never used.","'tree' is defined but never used.","'countryList' is assigned a value but never used.","'useEffect' is defined but never used.","'Main' is defined but never used.","'SidePanel' is defined but never used.","'DateInput' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'grommet' is defined but never used.","'ThemeType' is defined but never used.","'ThemeContext' is defined but never used.","'deepMerge' is defined but never used.","'customTheme' is assigned a value but never used.","'When' is assigned a value but never used.","'ClearForm' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]